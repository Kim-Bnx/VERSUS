export interface RichTextEditorLabels {
    /** RichTextEditor.Bold control aria-label */
    boldControlLabel: string;
    /** RichTextEditor.Hr control aria-label */
    hrControlLabel: string;
    /** RichTextEditor.Italic control aria-label */
    italicControlLabel: string;
    /** RichTextEditor.Underline control aria-label */
    underlineControlLabel: string;
    /** RichTextEditor.Strike control aria-label */
    strikeControlLabel: string;
    /** RichTextEditor.ClearFormatting control aria-label */
    clearFormattingControlLabel: string;
    /** RichTextEditor.Link control aria-label */
    linkControlLabel: string;
    /** RichTextEditor.Unlink control aria-label */
    unlinkControlLabel: string;
    /** RichTextEditor.BulletList control aria-label */
    bulletListControlLabel: string;
    /** RichTextEditor.OrderedList control aria-label */
    orderedListControlLabel: string;
    /** RichTextEditor.H1 control aria-label */
    h1ControlLabel: string;
    /** RichTextEditor.H2 control aria-label */
    h2ControlLabel: string;
    /** RichTextEditor.H3 control aria-label */
    h3ControlLabel: string;
    /** RichTextEditor.H4 control aria-label */
    h4ControlLabel: string;
    /** RichTextEditor.H5 control aria-label */
    h5ControlLabel: string;
    /** RichTextEditor.H6 control aria-label */
    h6ControlLabel: string;
    /** RichTextEditor.Blockquote control aria-label */
    blockquoteControlLabel: string;
    /** RichTextEditor.AlignLeft control aria-label */
    alignLeftControlLabel: string;
    /** RichTextEditor.AlignCenter control aria-label */
    alignCenterControlLabel: string;
    /** RichTextEditor.AlignRight control aria-label */
    alignRightControlLabel: string;
    /** RichTextEditor.AlignJustify control aria-label */
    alignJustifyControlLabel: string;
    /** RichTextEditor.Code control aria-label */
    codeControlLabel: string;
    /** RichTextEditor.CodeBlock control aria-label */
    codeBlockControlLabel: string;
    /** RichTextEditor.Subscript control aria-label */
    subscriptControlLabel: string;
    /** RichTextEditor.Superscript control aria-label */
    superscriptControlLabel: string;
    /** RichTextEditor.ColorPicker control aria-label */
    colorPickerControlLabel: string;
    /** RichTextEditor.UnsetColor control aria-label */
    unsetColorControlLabel: string;
    /** RichTextEditor.Highlight control aria-label */
    highlightControlLabel: string;
    /** A function go get RichTextEditor.Color control aria-label based on color that control applies */
    colorControlLabel: (color: string) => string;
    /** aria-label for link editor url input */
    linkEditorInputLabel: string;
    /** placeholder for link editor url input */
    linkEditorInputPlaceholder: string;
    /** Content of external button tooltip in link editor when the link was chosen to open in a new tab */
    linkEditorExternalLink: string;
    /** Content of external button tooltip in link editor when the link was chosen to open in the same tab */
    linkEditorInternalLink: string;
    /** Save button content in link editor */
    linkEditorSave: string;
    /** Cancel button title text in color picker control */
    colorPickerCancel: string;
    /** Clear button title text in color picker control */
    colorPickerClear: string;
    /** Color picker button title text in color picker control */
    colorPickerColorPicker: string;
    /** Palette button title text in color picker control */
    colorPickerPalette: string;
    /** Save button title text in color picker control */
    colorPickerSave: string;
    /** aria-label for color palette colors */
    colorPickerColorLabel: (color: string) => string;
}
export declare const DEFAULT_LABELS: RichTextEditorLabels;
//# sourceMappingURL=labels.d.ts.map